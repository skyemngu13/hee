local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local enemies = workspace.__Main.__Enemies.Server:WaitForChild("7")

local reachedMob = nil

-- Tìm mob xa nhất có HP > 0 và Scale = 2
local function findFurthestMob()
	local furthest, maxDist = nil, 0
	for _, mob in pairs(enemies:GetChildren()) do
		local hp = mob:GetAttribute("HP")
		local scale = mob:GetAttribute("Scale")
		if hp and hp > 0 and scale == 2 then
			local dist = (mob.Position - rootPart.Position).Magnitude
			if dist > maxDist then
				maxDist, furthest = dist, mob
			end
		end
	end
	return furthest
end

-- Gửi destroy khi HP mob bằng 0
local function destroyMob(uuid)
	for i = 1, 4 do
		local args = {
			[1] = {
				[1] = {
					["Event"] = "EnemyDestroy",
					["Enemy"] = uuid
				},
				[2] = "\4"
			}
		}
		ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
		task.wait(0.2)
	end
end

-- Bay đến mob bằng velocity
local function velocityTo(targetPosition)
	local direction = (targetPosition - rootPart.Position).Unit
	local distance = (targetPosition - rootPart.Position).Magnitude
	local speed = 250  -- Tùy game, có thể tăng nếu muốn bay nhanh

	local travelTime = distance / speed

	-- Đặt vận tốc hướng đến mob
	rootPart.AssemblyLinearVelocity = direction * speed

	-- Dừng lại sau khi bay xong
	task.delay(travelTime, function()
		rootPart.AssemblyLinearVelocity = Vector3.zero
	end)
end

-- Theo dõi mob và destroy khi chết
local function moveToAndWatch(mob)
	local uuid = mob:GetAttribute("UUID") or mob.Name
	velocityTo(mob.Position)

	local connection
	connection = RunService.Heartbeat:Connect(function()
		if not mob or not mob.Parent then
			connection:Disconnect()
			reachedMob = nil
			return
		end

		local hp = mob:GetAttribute("HP")
		if hp and hp <= 0 then
			connection:Disconnect()
			destroyMob(uuid)
			reachedMob = nil
		end
	end)

	reachedMob = mob
end

-- Vòng lặp chính
while task.wait(0.2) do
	if not reachedMob then
		local mob = findFurthestMob()
		if mob then
			moveToAndWatch(mob)
		end
	end
end
