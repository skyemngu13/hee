while true do
    if game.PlaceId == 87039211657390 then
        wait(3)

        -- Mua vé vào dungeon
        local args1 = {
            [1] = {
                [1] = {["Type"] = "Gems", ["Event"] = "DungeonAction", ["Action"] = "BuyTicket"},
                [2] = "\n"
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args1))

        wait(1)

        -- Tạo dungeon
        local args2 = {
            [1] = {
                [1] = {["Event"] = "DungeonAction", ["Action"] = "Create"},
                [2] = "\n"
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args2))

        wait(1)

        -- Bắt đầu dungeon
        local args3 = {
            [1] = {
                [1] = {["Dungeon"] = 876403839, ["Event"] = "DungeonAction", ["Action"] = "Start"},
                [2] = "\n"
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args3))

    else
        local dungeonInfo = game.Players.LocalPlayer.PlayerGui.Hud.UpContanier.DungeonInfo

        -- Hàm lấy thời gian còn lại
        local function getRemainingTime()
            local timeText = dungeonInfo.Text
            local minutes, seconds = timeText:match("Dungeon Ends in (%d+)m (%d+)s")
            if minutes then
                return tonumber(minutes) * 60 + tonumber(seconds)
            else
                local secondsOnly = timeText:match("Dungeon Ends in (%d+)s")
                return secondsOnly and tonumber(secondsOnly)
            end
        end

        -- Kiểm tra xem có "Double Dungeon Appear" trong Text không
        local function isDoubleDungeonAppeared()
            return string.match(dungeonInfo.Text, "Double Dungeon Appear") ~= nil
        end

        -- Kiểm tra và theo dõi trạng thái dungeon
        local timeBeforeEnd = tick()

        repeat
            wait(1)
            local remainingTime = getRemainingTime()

            -- Kiểm tra nếu thời gian còn lại <= 14 giây và có "Double Dungeon Appear"
            if remainingTime and remainingTime <= 14 then
                if isDoubleDungeonAppeared() then
                    -- Nếu "Double Dungeon Appear" xuất hiện, dừng lại và không làm gì
                    return
                end
            end
        until getRemainingTime() and getRemainingTime() <= 14

        -- Kiểm tra lại sau khi vòng lặp kết thúc
        wait(3)

        -- Nếu không có "Double Dungeon Appear", thực hiện mua ticket và tạo dungeon mới
        if not isDoubleDungeonAppeared() then
            -- Mua vé vào dungeon
            local args1 = {
                [1] = {
                    [1] = {["Type"] = "Gems", ["Event"] = "DungeonAction", ["Action"] = "BuyTicket"},
                    [2] = "\n"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args1))

            wait(1)

            -- Tạo dungeon
            local args2 = {
                [1] = {
                    [1] = {["Event"] = "DungeonAction", ["Action"] = "Create"},
                    [2] = "\n"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args2))

            wait(1)

            -- Bắt đầu dungeon
            local args3 = {
                [1] = {
                    [1] = {["Dungeon"] = 876403839, ["Event"] = "DungeonAction", ["Action"] = "Start"},
                    [2] = "\n"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args3))
        end
    end
end
