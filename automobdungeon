local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local enemies = workspace.__Main.__Enemies.Server

local speed = 500
local tween = nil
local reachedMob = nil

-- Find the nearest mob
local function findNearestMob()
    local nearest, minDist = nil, math.huge
    for _, mob in pairs(enemies:GetChildren()) do
        local hp = mob:GetAttribute("HP")
        if hp and hp > 0 then
            local dist = (mob.Position - rootPart.Position).Magnitude
            if dist < minDist then
                minDist, nearest = dist, mob
            end
        end
    end
    return nearest
end

-- Destroy the mob
local function destroyMob(uuid)
    for i = 1, 5 do
        local args = { [1] = { [1] = { ["Event"] = "EnemyDestroy", ["Enemy"] = uuid }, [2] = "\4" } }
        ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        task.wait(0.1)
    end
end

-- Arise the mob
local function ariseMob(uuid)
    for i = 1, 5 do
        local args = { [1] = { [1] = { ["Event"] = "EnemyCapture", ["Enemy"] = uuid }, [2] = "\4" } }
        ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        task.wait(0.1)
    end
end

-- Move to the mob and monitor HP, but DO NOT punch
local function moveToMob(mob)
    if tween then
        tween:Cancel()
    end

    local uuid = mob:GetAttribute("UUID") or mob.Name
    local distance = (mob.Position - rootPart.Position).Magnitude
    local tweenTime = distance / speed

    -- Tween đến quái
    tween = TweenService:Create(rootPart, TweenInfo.new(tweenTime, Enum.EasingStyle.Linear), {CFrame = mob.CFrame})
    tween:Play()

    -- Theo dõi HP của quái trong khi di chuyển
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not mob or not mob.Parent then
            connection:Disconnect()
            reachedMob = nil
            return
        end

        local hp = mob:GetAttribute("HP")
        if not hp or hp <= 0 then
            connection:Disconnect()
            local model = mob:GetAttribute("Model")
            if model == "JinWoo" or model == "Pucci" or model == "Denji" then
                ariseMob(uuid)
            else
                destroyMob(uuid)
            end
            reachedMob = nil
        end
    end)

    -- Đợi tween xong và di chuyển tiếp đến mob khác ngay lập tức
    tween.Completed:Connect(function()
        if not reachedMob then
            reachedMob = mob
        end
    end)
end

-- Main loop
while task.wait(0.5) do
    if not reachedMob then
        local mob = findNearestMob()
        if mob then
            moveToMob(mob)
        end
    end
end
