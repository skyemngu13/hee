local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local enemies = workspace.__Main.__Enemies.Server

local speed, tween = 1000, nil

local function findNearestMob()
    local nearest, minDist = nil, math.huge
    for _, mob in pairs(enemies:GetChildren()) do
        local hp = mob:GetAttribute("HP")
        if hp and hp > 0 then
            local dist = (mob.Position - rootPart.Position).Magnitude
            if dist < minDist then
                minDist, nearest = dist, mob
            end
        end
    end
    return nearest
end

local function punchMob(uuid)
    local args = {
        [1] = {
            [1] = {
                ["Event"] = "PunchAttack",
                ["Enemy"] = uuid
            },
            [2] = "\4"
        }
    }
    ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
end

local function destroyMob(uuid)
    for i = 1, 5 do
        local args = {
            [1] = {
                [1] = {
                    ["Event"] = "EnemyDestroy",
                    ["Enemy"] = uuid
                },
                [2] = "\4"
            }
        }
        ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        task.wait(0.2)
    end
end

local function ariseMob(uuid)
    for i = 1, 5 do
        local args = {
            [1] = {
                [1] = {
                    ["Event"] = "EnemyCapture",
                    ["Enemy"] = uuid
                },
                [2] = "\4"
            }
        }
        ReplicatedStorage.BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        task.wait(0.2)
    end
end

local function moveToAndPunch(mob)
    if tween then tween:Cancel() end

    local uuid = mob:GetAttribute("UUID") or mob.Name
    local distance = (mob.Position - rootPart.Position).Magnitude
    local tweenTime = distance / speed

    local finished = false
    tween = TweenService:Create(rootPart, TweenInfo.new(tweenTime, Enum.EasingStyle.Linear), {CFrame = mob.CFrame})
    tween.Completed:Connect(function()
        finished = true
    end)
    tween:Play()

    while not finished do task.wait() end

    task.wait(0.5)

    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not mob or not mob.Parent then
            connection:Disconnect()
            return
        end

        local hp = mob:GetAttribute("HP")
        if not hp or hp <= 0 then
            connection:Disconnect()

            if mob:GetAttribute("Model") == "JinWoo" then
                ariseMob(uuid)
            else
                destroyMob(uuid)
            end

            return
        end

        punchMob(uuid)
        task.wait(0.5)
    end)
end

while task.wait(0.3) do
    local mob = findNearestMob()
    if mob then
        moveToAndPunch(mob)
    end
end
