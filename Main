repeat 
    task.wait() 
until game:IsLoaded() 
   and game.Players.LocalPlayer 
   and workspace:FindFirstChild("__Extra") 
   and workspace:FindFirstChild("__Main")

-- Bypass anti-teleport tr∆∞·ªõc khi load UI
local replicated = game:GetService("ReplicatedStorage")
local success, extraFunctionsModule = pcall(function()
    return require(replicated:WaitForChild("SharedModules"):WaitForChild("ExtraFunctions"))
end)

if success and extraFunctionsModule then
    local extraFunctions = extraFunctionsModule

    if not getgenv()._original_GetPlayerSpeed then
        getgenv()._original_GetPlayerSpeed = extraFunctions.GetPlayerSpeed

        extraFunctions.GetPlayerSpeed = function(player)
            return 9999999
        end
    end
end

local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/jensonhirst/Orion/main/source"))()

local Window = OrionLib:MakeWindow({
    Name = "P·ªãa Hub - P·ªãa x√†o me",  -- Th√™m ph·∫ßn text "P·ªãa x√†o me" ph√≠a tr∆∞·ªõc
    HidePremium = false,
    SaveConfig = false,
    ConfigFolder = "AutoHub"
})

local settingsFile = "piahub.json"
local HttpService = game:GetService("HttpService")

-- ƒê·ªçc settings
local settings = {}
pcall(function()
    if isfile(settingsFile) then
        settings = HttpService:JSONDecode(readfile(settingsFile))
    end
end)

-- L∆∞u settings
local function saveSettings()
    writefile(settingsFile, HttpService:JSONEncode(settings))
end

local InfoTab = Window:MakeTab({
    Name = "Info",
    Icon = "rbxassetid://83969479610474",
    PremiumOnly = false
})

-- Th√¥ng b√°o c·∫≠p nh·∫≠t
InfoTab:AddParagraph("üõ†Ô∏è C·∫≠p nh·∫≠t m·ªõi nh·∫•t", [[
üìå - Version: v1.2
üÜï + Th√™m Auto Join Castle
üîß + C·∫£i thi·ªán hi·ªáu xu·∫•t t√≠nh nƒÉng
üí° + L∆∞u setting khi telepoint
‚öîÔ∏è + Arise ƒëang c√≥ "Jinwoo"-"Pucci"-"Denji"
‚õ©Ô∏è + Check double "b√∫ sjw N ü§ë"
‚úÖÔ∏è - Anti afk ƒë√£ ƒë∆∞·ª£c b·∫≠t
üîß + New farm = tele
üëâ --L∆∞u √Ω b·∫≠t Auto destroy m·ªõi arise ƒëc m·∫•y con kia---
------- mai test logic m·ªõi gi·∫£m t·ªâ l·ªá kick l√™n 90% -----
]])

local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://124598949660449",
    PremiumOnly = false
})

local toggleList = {
    {
        Name = "Auto Bypass",
        Key = "AutoBypass",
        Script = "https://raw.githubusercontent.com/skyemngu13/hee/refs/heads/main/bypass"
    },
    {
        Name = "Auto Join Castle",  -- üëà Toggle m·ªõi
        Key = "AutoJoinCastle",
        Script = "https://raw.githubusercontent.com/skyemngu13/hee/refs/heads/main/castle"
    },
    {
        Name = "Auto Destroy", 
        Key = "AutoDestroy",
        Script = "https://raw.githubusercontent.com/skyemngu13/hee/refs/heads/main/destroy"
    }
}

-- T·∫°o toggle
for _, t in ipairs(toggleList) do
    settings[t.Key] = settings[t.Key] or false

    MainTab:AddToggle({
        Name = t.Name,
        Default = settings[t.Key],
        Callback = function(val)
            settings[t.Key] = val
            saveSettings()

            if val then
                -- Ch·∫°y sau 1 frame, tr√°nh crash UI
                task.spawn(function()
                    pcall(function()
                        loadstring(game:HttpGet(t.Script))()
                    end)
                end)
            end
        end
    })
end

MainTab:AddLabel("üï≥Ô∏è Auto Farm Dungeon")

local autodungeon = settings["Autofarmdungeon"] or false
local dungeonDelay = settings["DungeonDelay"] or 0.5

MainTab:AddToggle({
    Name = "Auto Farm Dungeon",
    Default = autodungeon,
    Callback = function(val)
        autodungeon = val
        settings["Autofarmdungeon"] = val --he
        saveSettings()  --  L∆∞u l·∫°i
    end
})


MainTab:AddTextbox({
    Name = "Delay kill qu√°i Dungeon (gi√¢y)",
    Default = tostring(dungeonDelay),
    TextDisappear = false,
    Callback = function(val)
        local number = tonumber(val)
        if number then
            dungeonDelay = number
            settings["DungeonDelay"] = number  -- <== L∆∞u v√†o settings
            saveSettings()                     -- <== G·ªçi h√†m l∆∞u
        end
    end
})

-- Lu·ªìng x·ª≠ l√Ω Auto Farm 
task.spawn(function()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local enemies = workspace:WaitForChild("__Main"):WaitForChild("__Enemies"):WaitForChild("Server")

    -- T√¨m mob g·∫ßn nh·∫•t (HP > 0, Scale >= 2 ∆∞u ti√™n, n·∫øu kh√¥ng c√≥ th√¨ ƒë√°nh Scale >= 1)
    local function findNearestMob()
    local priorityMob, fallbackMob = nil, nil
    local minDistPriority, minDistFallback = math.huge, math.huge

    for _, mob in pairs(enemies:GetChildren()) do
        if mob:IsA("Part") then
            local hp = mob:GetAttribute("HP")
            local scale = mob:GetAttribute("Scale")
            if hp and hp > 0 and scale and scale >= 1 then
                local dist = (mob.Position - rootPart.Position).Magnitude
                if scale >= 2 and dist < minDistPriority then
                    minDistPriority = dist
                    priorityMob = mob
                elseif dist < minDistFallback then
                    minDistFallback = dist
                    fallbackMob = mob
                end
            end
        end
    end

    return priorityMob or fallbackMob
end

    -- Teleport g·∫ßn mob
    local function teleportNearMob(mob)
        local direction = (rootPart.Position - mob.Position).Unit
        local offset = direction * 5 + Vector3.new(0, 3, 0)
        local targetPos = mob.Position + offset
        rootPart.CFrame = CFrame.new(targetPos, mob.Position)
    end

    -- X·ª≠ l√Ω mob
    local function handleMob(mob)
        while mob:IsDescendantOf(workspace) and (mob:GetAttribute("HP") or 0) > 0 do
            local distance = (mob.Position - rootPart.Position).Magnitude
            if distance > 7 then -- teleport n·∫øu c√°ch xa h∆°n 8 studs
                teleportNearMob(mob)
            end
            task.wait(0.1)
        end
        task.wait(dungeonDelay)
    end

    -- V√≤ng l·∫∑p ch√≠nh
    while true do
        if autodungeon then
            local mob = findNearestMob()
            if mob then
                handleMob(mob)
            else
                task.wait(0.2)
            end
        else
            task.wait(0.2)
        end
    end
end)

MainTab:AddLabel("üåæ Auto Farm Mori")

local autoMori = settings["AutoFarmMori"] or false
local delayAfterKill = settings["DelayAfterKill"] or 0.5

-- Toggle Auto Farm Mori
MainTab:AddToggle({
    Name = "Auto Farm Mori",
    Default = autoMori,
    Callback = function(val)
        autoMori = val
        settings["AutoFarmMori"] = val --he
        saveSettings()  --  L∆∞u l·∫°i
    end
})

-- Textbox ƒë·ªÉ ch·ªânh delay sau khi gi·∫øt mob
MainTab:AddTextbox({
    Name = "Delay sau khi gi·∫øt mob (gi√¢y)",
    Default = tostring(delayAfterKill),
    TextDisappear = false,
    Callback = function(val)
        local number = tonumber(val)
        if number then
            delayAfterKill = number
            settings["DelayAfterKill"] = number  -- <== L∆∞u v√†o settings
            saveSettings()                       -- <== G·ªçi h√†m l∆∞u
        end
    end
})

-- Lu·ªìng x·ª≠ l√Ω Auto Farm Mori
task.spawn(function()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local enemies = workspace:WaitForChild("__Main"):WaitForChild("__Enemies"):WaitForChild("Server")

    local mapId = "7"
    local targetMap = enemies:FindFirstChild(mapId)
    if not targetMap then return end

    -- T√¨m mob g·∫ßn nh·∫•t (Scale = 2 v√† HP > 0)
    local function findNearestMob()
        local nearestMob, minDist = nil, math.huge

        for _, mob in pairs(targetMap:GetChildren()) do
            if mob:IsA("Part") then
                local hp = mob:GetAttribute("HP")
                local scale = mob:GetAttribute("Scale")
                if hp and hp > 0 and scale == 2 then
                    local dist = (mob.Position - rootPart.Position).Magnitude
                    if dist < minDist then
                        minDist = dist
                        nearestMob = mob
                    end
                end
            end
        end

        return nearestMob
    end

    -- Teleport g·∫ßn mob
    local function teleportNearMob(mob)
        if not mob:IsDescendantOf(workspace) then return end
        local success, direction = pcall(function()
            return (rootPart.Position - mob.Position).Unit
        end)
        if not success then return end

        local offset = direction * 5 + Vector3.new(0, 3, 0)
        local targetPos = mob.Position + offset
        rootPart.CFrame = CFrame.new(targetPos, mob.Position)
    end

    -- X·ª≠ l√Ω mob
    local function handleMob(mob)
        while mob:IsDescendantOf(workspace) and (mob:GetAttribute("HP") or 0) > 0 do
            local distance = (mob.Position - rootPart.Position).Magnitude
            if distance > 7 then
                teleportNearMob(mob)
            end
            task.wait(0.1)
        end
        task.wait(delayAfterKill)
    end

    -- V√≤ng l·∫∑p ch√≠nh
    while true do
        if autoMori then
            local mob = findNearestMob()
            if mob then
                handleMob(mob)
            else
                task.wait(0.2)
            end
        else
            task.wait(0.2)
        end
    end
end)

-- T·∫°o Tab Misc
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://95758233681936",
    PremiumOnly = false
})

local autoClicking = false  -- Bi·∫øn tr·∫°ng th√°i AutoClick

MiscTab:AddToggle({
    Name = "AutoClick",  -- Toggle m·ªõi
    Default = settings["AutoClick"] or false,
    Callback = function(val)
        settings["AutoClick"] = val
        saveSettings()

        if val then
            -- B·∫Øt ƒë·∫ßu AutoClick khi toggle b·∫≠t
            autoClicking = true
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Player = game:GetService("Players").LocalPlayer
            local SharedModules = ReplicatedStorage.SharedModules

            require(SharedModules.Others.GuiFunctions)
            local WeaponsModule = require(SharedModules.WeaponsModule)

            -- Ch·ªù player load xong
            repeat task.wait(1) until Player:GetAttribute("Loaded") == true

            -- B·∫Øt ƒë·∫ßu v√≤ng l·∫∑p AutoClick
            task.spawn(function()
                while autoClicking do
                    task.wait(0.1)

                    -- N·∫øu kh√¥ng c√≥ gamepass AutoClicker th√¨ delay l√¢u h∆°n
                    if Player.leaderstats:FindFirstChild("Passes") and Player.leaderstats.Passes:GetAttribute("AutoClicker") ~= true then
                        task.wait(0.2)
                    end

                    -- N·∫øu b·ªã t·∫Øt th√¨ t·ª± b·∫≠t l·∫°i
                    if Player:GetAttribute("AutoClick") ~= true then
                        Player:SetAttribute("AutoClick", true)
                    end

                    -- G·ªçi Click
                    WeaponsModule.Click({
                        ["KeyCode"] = Enum.KeyCode.ButtonX
                    }, false, nil, true)
                end
            end)
        else
            -- D·ª´ng AutoClick khi toggle t·∫Øt
            autoClicking = false
        end
    end
})

MiscTab:AddToggle({
    Name = "Auto Attack",  -- Toggle Auto Attack
    Default = settings["AutoAttack"] or false,
    Callback = function(val)
        settings["AutoAttack"] = val
        saveSettings()

        if val then
            -- Ch·∫°y script Auto Attack t·ª´ URL khi toggle b·∫≠t
            task.spawn(function()
                pcall(function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/skyemngu13/hee/refs/heads/main/auto%20attack"))()
                end)
            end)
        else
            -- T·∫Øt Auto Attack khi toggle t·∫Øt
            -- B·∫°n c√≥ th·ªÉ th√™m logic ƒë·ªÉ d·ª´ng script Auto Attack n·∫øu c·∫ßn
        end
    end
})

MiscTab:AddToggle({
    Name = "Auto Load Script",
    Default = settings["AutoLoadScript"] or false,
    Callback = function(val)
        settings["AutoLoadScript"] = val
        saveSettings()

        if val then
            queue_on_teleport([[
                loadstring(game:HttpGet('https://raw.githubusercontent.com/Baylac2006/memaybeo/refs/heads/main/memaybeo'))()
            ]])
        end
    end
})

-- Toggle Bypass Cooldown
MiscTab:AddToggle({
    Name = "No Cooldown",
    Default = settings["BypassCooldown"] or false,
    Callback = function(val)
        settings["BypassCooldown"] = val
        saveSettings()

        if val then
            task.spawn(function()
                local replicated = game:GetService("ReplicatedStorage")
                local success, module = pcall(function()
                    return require(replicated:WaitForChild("SharedModules"):WaitForChild("CooldownModule"))
                end)

                if success and module then
                    module.Verify = function(...) return true end
                    module.VerifyPower = function(...) return true end
                    module.VerifyNpc = function(...) return true end
                    module.VerifyPlayer = function(...) return true end
                    module.VerifyPowerPlayer = function(...) return true end
                end
            end)
        end
    end
})

MiscTab:AddToggle({
    Name = "Gi·∫£m lag", -- T√™n toggle
    Default = settings["SpecialScript"] or false,
    Callback = function(val)
        settings["SpecialScript"] = val
        saveSettings()

        if val then
            -- Ch·∫°y script khi b·∫≠t
            task.spawn(function()
                pcall(function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/skyemngu13/hee/refs/heads/main/giamlag"))()
                end)
            end)
        end
    end
})

local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://106229124186030", -- B·∫°n c√≥ th·ªÉ thay ƒë·ªïi icon
    PremiumOnly = false
})

local teleportData = {
    {Name = "Solo lvl", Position = CFrame.new(577.968262, 27.9623756, 261.452271, 1, 0, 0, 0, 1, 0, 0, 0, 1)},
    {Name = "Naruto", Position = CFrame.new(-3380.2373, 29.8265285, 2257.26196, 1, 0, 0, 0, 1, 0, 0, 0, 1)},
    {Name = "One piece", Position = CFrame.new(-2851.1062, 49.8987885, -2011.39526, 0.739920259, -0.0159788765, 0.672504723, 0.0134891849, 0.999869287, 0.0089157233, -0.672559321, 0.00247461651, 0.74003911)},
    {Name = "Bleach", Position = CFrame.new(2641.79517, 45.9265289, -2645.07568, 0.780932784, -0, -0.624615133, 0, 1, -0, 0.624615133, 0, 0.780932784)},
    {Name = "Black clover", Position = CFrame.new(198.338684, 39.2076797, 4296.10938, 0.993159413, -0, -0.116766132, 0, 1, -0, 0.116766132, 0, 0.993159413)},
    {Name = "Chain sawn man", Position = CFrame.new(236.932678, 33.3960934, -4301.60547, 0, 0, 1, 0, 1, -0, -1, 0, 0)},
    {Name = "JoJo", Position = CFrame.new(4816.31641, 30.4423409, -120.22998, 0, 0, 1, 0, 1, -0, -1, 0, 0)},
    {Name = "GuildHall", Position = CFrame.new(9555, -204, 286)},
}

-- T·∫°o 7 n√∫t teleport
for _, data in ipairs(teleportData) do
    TeleportTab:AddButton({
        Name = data.Name,
        Callback = function()
            local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.Anchored = true
                hrp.CFrame = data.Position

                OrionLib:MakeNotification({
                    Name = "Teleported!",
                    Content = "ƒê√£ d·ªãch chuy·ªÉn ƒë·∫øn " .. data.Name,
                    Image = "rbxassetid://126309628188296",
                    Time = 3
                })

                task.delay(1, function()
                    if hrp then
                        hrp.Anchored = false
                    end
                end)
            end
        end
    })
end

local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")

-- X√≥a GUI c≈© n·∫øu ƒë√£ t·ªìn t·∫°i
local old = game:GetService("CoreGui"):FindFirstChild("FPSPingDisplay")
if old then
	old:Destroy()
end

-- T·∫°o GUI m·ªõi
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FPSPingDisplay"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999
screenGui.Enabled = true

pcall(function()
	screenGui.Parent = game:GetService("CoreGui")
end)

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 240, 0, 100)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundTransparency = 1
mainFrame.Parent = screenGui

-- T·∫°o d√≤ng text
local function createRow(y)
	local row = Instance.new("Frame")
	row.Size = UDim2.new(1, 0, 0, 30)
	row.Position = UDim2.new(0, 0, 0, y)
	row.BackgroundTransparency = 1
	row.Parent = mainFrame

	local layout = Instance.new("UIListLayout")
	layout.FillDirection = Enum.FillDirection.Horizontal
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 4)
	layout.Parent = row

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 50, 1, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.SourceSansBold
	label.TextSize = 24
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.TextStrokeTransparency = 0.5
	label.Parent = row

	local value = label:Clone()
	value.Size = UDim2.new(1, -50, 1, 0)
	value.Parent = row

	return label, value
end

local fpsLabel, fpsValue = createRow(0)
local pingLabel, pingValue = createRow(30)
local timeLabel, timeValue = createRow(60)

fpsLabel.Text = "FPS:"
pingLabel.Text = "Ping:"
timeLabel.Text = "Time:"

-- Hi·ªáu ·ª©ng rainbow
local function rainbow(offset)
	local t = tick()
	local r = 0.5 + 0.5 * math.sin(t * 3 + offset)
	local g = 0.5 + 0.5 * math.sin(t * 3 + offset + 2)
	local b = 0.5 + 0.5 * math.sin(t * 3 + offset + 4)
	return Color3.new(r, g, b)
end

-- Lu·ªìng ri√™ng ƒë·ªÉ update UI
task.spawn(function()
	local fps, count, last = 0, 0, tick()

	RunService.RenderStepped:Connect(function()
		if not screenGui.Enabled then return end

		count += 1
		local now = tick()

		if now - last >= 1 then
			fps = count
			count = 0
			last = now

			local pingStat = Stats:FindFirstChild("Network") and Stats.Network:FindFirstChild("ServerStatsItem")
			local ping = pingStat and pingStat["Data Ping"]:GetValue() or 0
			pingValue.Text = math.floor(ping + 0.5) .. " ms"
			fpsValue.Text = tostring(fps)
		end

		local t = os.date("*t")
		timeValue.Text = string.format("%02d:%02d:%02d", t.hour, t.min, t.sec)

		-- Rainbow m√†u
		fpsLabel.TextColor3 = rainbow(0)
		fpsValue.TextColor3 = rainbow(1)
		pingLabel.TextColor3 = rainbow(2)
		pingValue.TextColor3 = rainbow(3)
		timeLabel.TextColor3 = rainbow(4)
		timeValue.TextColor3 = rainbow(5)
	end)
end)

task.spawn(function()
    task.wait(1) -- ƒê·∫£m b·∫£o UI v·∫Ω xong

    -- Ch·∫°y c√°c script ƒë√£ b·∫≠t
    for _, t in ipairs(toggleList) do
        if settings[t.Key] then
            pcall(function()
                loadstring(game:HttpGet(t.Script))()
            end)
        end
    end

  -- ki·ªÉm tra BypassCooldown
    if settings["BypassCooldown"] then
        task.spawn(function()
            local replicated = game:GetService("ReplicatedStorage")
            local success, module = pcall(function()
                return require(replicated:WaitForChild("SharedModules"):WaitForChild("CooldownModule"))
            end)

            if success and module then
                module.Verify = function(...) return true end
                module.VerifyPower = function(...) return true end
                module.VerifyNpc = function(...) return true end
                module.VerifyPlayer = function(...) return true end
                module.VerifyPowerPlayer = function(...) return true end
            end
        end)
    end
end)

-- Anti-AFK Script (Auto Execute Version)
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    vu:CaptureController()
    vu:ClickButton2(Vector2.new(0, 0))
end)
